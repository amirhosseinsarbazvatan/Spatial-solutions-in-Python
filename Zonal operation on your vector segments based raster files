# Execute mean zonal operation on your vector segments based raster files(without limitation) and record zonal value in attribute table of segments

# Must attend to this below cases
# In this code, .gdb contain all feature class must be copied to rasters folder.
# In this code, workspace and out Table Directory must be same.

env.workspace = os.path.abspath(os.path.curdir)+"/Rasters directory name/"
outTABLEDir = os.path.abspath(os.path.curdir)+"/Rasters directory name/"

# Read and find all vectors from inside gdb
# All finally vectors are in "fet" list
vec = []
fet = []

vecpath = os.path.abspath(os.path.curdir)+"/Rasters directory name/"
print(vecpath)
for dirpath, dirnames, filenames in arcpy.da.Walk(vecpath, datatype="Container"):
    for dirname in dirnames:
        if ".gdb" in dirname:
            print(dirname)
            env.workspace = os.path.abspath(os.path.curdir)+"/Rasters directory name/"+dirname
            for featureclassName in arcpy.ListFeatureClasses():
                fet.append(os.path.abspath(os.path.curdir)+"/Rasters directory name/"+dirname+"/"+featureclassName)
            print(fet)



# Create  new field named "zonal" and copy "OBJECTID" to that. 
for segment in fet:
    arcpy.AddField_management(segment, "zonal", "LONG")

for segment in fet:
    arcpy.CalculateField_management(segment, "zonal","!OBJECTID!", "PYTHON_9.3")



# Create empty fields by names of rasters
env.workspace = os.path.abspath(os.path.curdir)+"/Rasters directory name/"
        
# Execute zonal and give a table named raster name + segment name

x = arcpy.ListRasters()
for raster in arcpy.ListRasters():
    for segment in fet:
        print(raster," vs ",segment)
        print("raster index : ",x.index(raster),"segment index : ", fet.index(segment))
        outTable =outTABLEDir+raster[:-4]+"__"+segment.split('/')[-1]+".dbf"
        print(outTable)
        arcpy.sa.ZonalStatisticsAsTable(segment,"zonal",raster, outTable ,"DATA","MEAN")


# Create empty .gdb file for final shapefile
arcpy.CreateFolder_management(os.path.abspath(os.path.curdir), "zonaledSHP")
arcpy.CreateFileGDB_management(os.path.abspath(os.path.curdir)+"\\zonaledSHP\\", "zonaled.gdb")

env.workspace = os.path.abspath(os.path.curdir)+"/Rasters directory name/"
# Join and copy join to new fields
for segment in fet:
    for Table in arcpy.ListTables():
        print(Table.split('__')[1][:-4])
        if (segment.split('/')[-1] == Table.split('__')[1][:-4]):
            
            arcpy.MakeFeatureLayer_management ( segment, "segmentName")
            arcpy.JoinField_management(segment,"zonal",Table,"zonal",['MEAN'])
            arcpy.AlterField_management(segment, 'MEAN', Table.split('__')[0])
            #arcpy.CalculateField_management(segment,'F_'+Table.split('__')[0]+'_','MEAN', "PYTHON_9.3")
            #arcpy.DeleteField_management(segment,["MEAN"])
       
# Finish zonal and create new SHP
